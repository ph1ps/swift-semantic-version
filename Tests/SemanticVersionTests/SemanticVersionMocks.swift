@testable import SemanticVersion

extension [String] {
  
  static let validVersions = [
    "0.0.4",
    "1.2.3",
    "10.20.30",
    "1.1.2-prerelease+meta",
    "1.1.2+meta",
    "1.1.2+meta-valid",
    "1.0.0-alpha",
    "1.0.0-beta",
    "1.0.0-alpha.beta",
    "1.0.0-alpha.beta.1",
    "1.0.0-alpha.1",
    "1.0.0-alpha0.valid",
    "1.0.0-alpha.0valid",
    "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay",
    "1.0.0-rc.1+build.1",
    "2.0.0-rc.1+build.123",
    "1.2.3-beta",
    "10.2.3-DEV-SNAPSHOT",
    "1.2.3-SNAPSHOT-123",
    "1.0.0",
    "2.0.0",
    "1.1.7",
    "2.0.0+build.1848",
    "2.0.1-alpha.1227",
    "1.0.0-alpha+beta",
    "1.2.3----RC-SNAPSHOT.12.9.1--.12+788",
    "1.2.3----R-S.12.9.1--.12+meta",
    "1.2.3----RC-SNAPSHOT.12.9.1--.12",
    "1.0.0+0.build.1-rc.10000aaa-kk-0.1",
    "1.0.0-0A.is.legal"
  ]
  
  static let invalidVersions = [
    "1",
    "1.2",
    "1.2.3-0123",
    "1.2.3-0123.0123",
    "1.1.2+.123",
    "+invalid",
    "-invalid",
    "-invalid+invalid",
    "-invalid.01",
    "alpha",
    "alpha.beta",
    "alpha.beta.1",
    "alpha.1",
    "alpha+beta",
    "alpha_beta",
    "alpha.",
    "alpha..",
    "beta",
    "1.0.0-alpha_beta",
    "-alpha.",
    "1.0.0-alpha..",
    "1.0.0-alpha..1",
    "1.0.0-alpha...1",
    "1.0.0-alpha....1",
    "1.0.0-alpha.....1",
    "1.0.0-alpha......1",
    "1.0.0-alpha.......1",
    "01.1.1",
    "1.01.1",
    "1.1.01",
    "1.2",
    "1.2.3.DEV",
    "1.2-SNAPSHOT",
    "1.2.31.2.3----RC-SNAPSHOT.12.09.1--..12+788",
    "1.2-RC-SNAPSHOT",
    "-1.0.3-gamma+b7718",
    "+justmeta",
    "9.8.7+meta+meta",
    "9.8.7-whatever+meta+meta"
  ]
  
  static let expandedVersions = [
    #"major: 0, minor: 0, patch: 4, prerelease: [], build: nil"#,
    #"major: 1, minor: 2, patch: 3, prerelease: [], build: nil"#,
    #"major: 10, minor: 20, patch: 30, prerelease: [], build: nil"#,
    #"major: 1, minor: 1, patch: 2, prerelease: [_Prerelease.alphanumeric("prerelease")], build: "meta""#,
    #"major: 1, minor: 1, patch: 2, prerelease: [], build: "meta""#,
    #"major: 1, minor: 1, patch: 2, prerelease: [], build: "meta-valid""#,
    #"major: 1, minor: 0, patch: 0, prerelease: [_Prerelease.alphanumeric("alpha")], build: nil"#,
    #"major: 1, minor: 0, patch: 0, prerelease: [_Prerelease.alphanumeric("beta")], build: nil"#,
    #"major: 1, minor: 0, patch: 0, prerelease: [_Prerelease.alphanumeric("alpha"), _Prerelease.alphanumeric("beta")], build: nil"#,
    #"major: 1, minor: 0, patch: 0, prerelease: [_Prerelease.alphanumeric("alpha"), _Prerelease.alphanumeric("beta"), _Prerelease.numeric(1)], build: nil"#,
    #"major: 1, minor: 0, patch: 0, prerelease: [_Prerelease.alphanumeric("alpha"), _Prerelease.numeric(1)], build: nil"#,
    #"major: 1, minor: 0, patch: 0, prerelease: [_Prerelease.alphanumeric("alpha0"), _Prerelease.alphanumeric("valid")], build: nil"#,
    #"major: 1, minor: 0, patch: 0, prerelease: [_Prerelease.alphanumeric("alpha"), _Prerelease.alphanumeric("0valid")], build: nil"#,
    #"major: 1, minor: 0, patch: 0, prerelease: [_Prerelease.alphanumeric("alpha-a"), _Prerelease.alphanumeric("b-c-somethinglong")], build: "build.1-aef.1-its-okay""#,
    #"major: 1, minor: 0, patch: 0, prerelease: [_Prerelease.alphanumeric("rc"), _Prerelease.numeric(1)], build: "build.1""#,
    #"major: 2, minor: 0, patch: 0, prerelease: [_Prerelease.alphanumeric("rc"), _Prerelease.numeric(1)], build: "build.123""#,
    #"major: 1, minor: 2, patch: 3, prerelease: [_Prerelease.alphanumeric("beta")], build: nil"#,
    #"major: 10, minor: 2, patch: 3, prerelease: [_Prerelease.alphanumeric("DEV-SNAPSHOT")], build: nil"#,
    #"major: 1, minor: 2, patch: 3, prerelease: [_Prerelease.alphanumeric("SNAPSHOT-123")], build: nil"#,
    #"major: 1, minor: 0, patch: 0, prerelease: [], build: nil"#,
    #"major: 2, minor: 0, patch: 0, prerelease: [], build: nil"#,
    #"major: 1, minor: 1, patch: 7, prerelease: [], build: nil"#,
    #"major: 2, minor: 0, patch: 0, prerelease: [], build: "build.1848""#,
    #"major: 2, minor: 0, patch: 1, prerelease: [_Prerelease.alphanumeric("alpha"), _Prerelease.numeric(1227)], build: nil"#,
    #"major: 1, minor: 0, patch: 0, prerelease: [_Prerelease.alphanumeric("alpha")], build: "beta""#,
    #"major: 1, minor: 2, patch: 3, prerelease: [_Prerelease.alphanumeric("---RC-SNAPSHOT"), _Prerelease.numeric(12), _Prerelease.numeric(9), _Prerelease.alphanumeric("1--"), _Prerelease.numeric(12)], build: "788""#,
    #"major: 1, minor: 2, patch: 3, prerelease: [_Prerelease.alphanumeric("---R-S"), _Prerelease.numeric(12), _Prerelease.numeric(9), _Prerelease.alphanumeric("1--"), _Prerelease.numeric(12)], build: "meta""#,
    #"major: 1, minor: 2, patch: 3, prerelease: [_Prerelease.alphanumeric("---RC-SNAPSHOT"), _Prerelease.numeric(12), _Prerelease.numeric(9), _Prerelease.alphanumeric("1--"), _Prerelease.numeric(12)], build: nil"#,
    #"major: 1, minor: 0, patch: 0, prerelease: [], build: "0.build.1-rc.10000aaa-kk-0.1""#,
    #"major: 1, minor: 0, patch: 0, prerelease: [_Prerelease.alphanumeric("0A"), _Prerelease.alphanumeric("is"), _Prerelease.alphanumeric("legal")], build: nil"#
  ]
}

extension [SemanticVersion] {
  
  static let validParsedVersions: [SemanticVersion] = [
    SemanticVersion(major: 0, minor: 0, patch: 4, prerelease: [], build: nil),
    SemanticVersion(major: 1, minor: 2, patch: 3, prerelease: [], build: nil),
    SemanticVersion(major: 10, minor: 20, patch: 30, prerelease: [], build: nil),
    SemanticVersion(major: 1, minor: 1, patch: 2, prerelease: [.alphanumeric("prerelease")], build: "meta"),
    SemanticVersion(major: 1, minor: 1, patch: 2, prerelease: [], build: "meta"),
    SemanticVersion(major: 1, minor: 1, patch: 2, prerelease: [], build: "meta-valid"),
    SemanticVersion(major: 1, minor: 0, patch: 0, prerelease: [.alphanumeric("alpha")], build: nil),
    SemanticVersion(major: 1, minor: 0, patch: 0, prerelease: [.alphanumeric("beta")], build: nil),
    SemanticVersion(major: 1, minor: 0, patch: 0, prerelease: [.alphanumeric("alpha"), .alphanumeric("beta")], build: nil),
    SemanticVersion(major: 1, minor: 0, patch: 0, prerelease: [.alphanumeric("alpha"), .alphanumeric("beta"), .numeric(1)], build: nil),
    SemanticVersion(major: 1, minor: 0, patch: 0, prerelease: [.alphanumeric("alpha"), .numeric(1)], build: nil),
    SemanticVersion(major: 1, minor: 0, patch: 0, prerelease: [.alphanumeric("alpha0"), .alphanumeric("valid")], build: nil),
    SemanticVersion(major: 1, minor: 0, patch: 0, prerelease: [.alphanumeric("alpha"), .alphanumeric("0valid")], build: nil),
    SemanticVersion(major: 1, minor: 0, patch: 0, prerelease: [.alphanumeric("alpha-a"), .alphanumeric("b-c-somethinglong")], build: "build.1-aef.1-its-okay"),
    SemanticVersion(major: 1, minor: 0, patch: 0, prerelease: [.alphanumeric("rc"), .numeric(1)], build: "build.1"),
    SemanticVersion(major: 2, minor: 0, patch: 0, prerelease: [.alphanumeric("rc"), .numeric(1)], build: "build.123"),
    SemanticVersion(major: 1, minor: 2, patch: 3, prerelease: [.alphanumeric("beta")], build: nil),
    SemanticVersion(major: 10, minor: 2, patch: 3, prerelease: [.alphanumeric("DEV-SNAPSHOT")], build: nil),
    SemanticVersion(major: 1, minor: 2, patch: 3, prerelease: [.alphanumeric("SNAPSHOT-123")], build: nil),
    SemanticVersion(major: 1, minor: 0, patch: 0, prerelease: [], build: nil),
    SemanticVersion(major: 2, minor: 0, patch: 0, prerelease: [], build: nil),
    SemanticVersion(major: 1, minor: 1, patch: 7, prerelease: [], build: nil),
    SemanticVersion(major: 2, minor: 0, patch: 0, prerelease: [], build: "build.1848"),
    SemanticVersion(major: 2, minor: 0, patch: 1, prerelease: [.alphanumeric("alpha"), .numeric(1227)], build: nil),
    SemanticVersion(major: 1, minor: 0, patch: 0, prerelease: [.alphanumeric("alpha")], build: "beta"),
    SemanticVersion(major: 1, minor: 2, patch: 3, prerelease: [.alphanumeric("---RC-SNAPSHOT"), .numeric(12), .numeric(9), .alphanumeric("1--"), .numeric(12)], build: "788"),
    SemanticVersion(major: 1, minor: 2, patch: 3, prerelease: [.alphanumeric("---R-S"), .numeric(12), .numeric(9), .alphanumeric("1--"), .numeric(12)], build: "meta"),
    SemanticVersion(major: 1, minor: 2, patch: 3, prerelease: [.alphanumeric("---RC-SNAPSHOT"), .numeric(12), .numeric(9), .alphanumeric("1--"), .numeric(12)], build: nil),
    SemanticVersion(major: 1, minor: 0, patch: 0, prerelease: [], build: "0.build.1-rc.10000aaa-kk-0.1"),
    SemanticVersion(major: 1, minor: 0, patch: 0, prerelease: [.alphanumeric("0A"), .alphanumeric("is"), .alphanumeric("legal")], build: nil)
  ]
}
